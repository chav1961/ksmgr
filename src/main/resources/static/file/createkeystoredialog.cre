== Создание репозитария ключей ==

Репозитарий ключей представляет собой файл, в котором хранятся в зашифрованном виде различного рода ключи, используемые в криптографии. Сам файл при хранении, как правило, зашифрован собственным паролем, который задается при создании файла (он также необходим при чтении файла).
Внутренняя структура репозитария определяется его типом. "Родной" для библиотеки JRE тип называется **PKCS12**. Сторонние разработчики библиотек криптографии (в число которых входит и [[https://www.bouncycastle.org/|Bouncy Castle]]) могут поддерживать и другие типы репозитериев ключей. Любой тип репозитария ключей
должен поддерживать хранение ключей, используемых к алгоритмах асимметричного шифрования (public key/private key/certificate). Некоторые другие типы репозитариев могут поддерживать дополнительные типы ключей (в частности, secret key, используемые а алгоритмах симметричного
шифрования). Один из таких типов репозитария - тип **BounceCastle**, но для его использования вашему приложения потребуется набор библиотек [[https://www.bouncycastle.org/|Bouncy Castle]].

=== Заметки для программиста ===

Для работы со сторонними криптографическими библиотеками вам необходимо в вашем приложении "подтянуть" эти библиотеки, а также, при запуске приложения, зарегистрировать провайдера сторонней криптографической библиотеки. Конкретно в этом приложении это сделано следующим образом:

maven dependency (см [[https://github.com/chav1961/ksmgr/blob/master/pom.xml|pom.xml]]):

{{{
		<dependency>
		    <groupId>org.bouncycastle</groupId>
		    <artifactId>bcpkix-jdk15on</artifactId>
		    <version>1.58</version>
		</dependency>	
}}}

Код регистрации провайдера (см [[https://github.com/chav1961/ksmgr/blob/master/src/main/java/chav1961/ksmgr/internal/PureLibClient.java|chav1961.ksmgr.internal.PureLibClient]]):

{{{
		Security.addProvider(new BouncyCastleProvider());
}}}

В [[https://www.bouncycastle.org/fips-java/BCFipsIn100.pdf|книге]] этому коду соответствует раздел **Provider installation**